# -*- coding: utf-8 -*-
"""stock-predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aFFCJkwQuCgiJl_K51eSH3oRu4R4vKky
"""

import pandas as pd
import numpy as np
import yfinance as yf
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import streamlit as st
import matplotlib.pyplot as plt

# Fetch stock data
def get_stock_data(ticker, start, end):
    stock = yf.download(ticker, start=start, end=end)
    return stock[['Close']]

# Prepare data
def prepare_data(stock_data):
    stock_data['Prediction'] = stock_data['Close'].shift(-1)
    X = np.array(stock_data.drop(['Prediction'], axis=1))[:-1]
    y = np.array(stock_data['Prediction'])[:-1]
    return train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
def train_model(X_train, y_train):
    model = LinearRegression()
    model.fit(X_train, y_train)
    return model

# Predict
def predict(model, X_test):
    return model.predict(X_test)

# Streamlit App
def main():
    st.title("Stock Price Predictor")
    ticker = st.text_input("Enter Stock Ticker (e.g., AAPL):", "AAPL")
    start = st.date_input("Start Date", pd.to_datetime("2024-01-01"))
    end = st.date_input("End Date", pd.to_datetime("2025-01-01"))

    if st.button("Predict"):
        stock_data = get_stock_data(ticker, start, end)
        if stock_data.empty:
            st.error("No data found for the given ticker and date range.")
            return

        X_train, X_test, y_train, y_test = prepare_data(stock_data)
        model = train_model(X_train, y_train)
        predictions = predict(model, X_test)

        fig, ax = plt.subplots(figsize=(10, 5))
        ax.plot(y_test, label='Actual Prices')
        ax.plot(predictions, label='Predicted Prices', linestyle='dashed')
        ax.legend()
        ax.set_title(f'Stock Price Prediction for {ticker}')
        st.pyplot(fig)

if __name__ == "__main__":
    main()

